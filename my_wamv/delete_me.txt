[INFO] [launch]: All log files can be found below /home/jonathan/.ros/log/2023-11-20-12-30-34-658659-jonathan-desktop-42982
[INFO] [launch]: Default logging verbosity is set to INFO
['xacro', '/home/jonathan/my_wamv/wamv_target.urdf', 'namespace:=wamv', 'locked:=true', 'vrx_sensors_enabled:=true', 'thruster_config:=H']
[INFO] [ruby $(which gz) sim-1]: process started with pid [42985]
[INFO] [monitor_sim-2]: process started with pid [42988]
[INFO] [create-3]: process started with pid [42990]
[INFO] [parameter_bridge-4]: process started with pid [42993]
[create-3] [INFO] [1700494235.041887687] [ros_gz_sim]: Requesting list of world names.
[parameter_bridge-4] [INFO] [1700494235.050419168] [ros_gz_bridge]: Creating GZ->ROS Bridge: [/clock (ignition.msgs.Clock) -> /clock (rosgraph_msgs/msg/Clock)] (Lazy 0)
[parameter_bridge-4] [INFO] [1700494235.050983886] [ros_gz_bridge]: Creating GZ->ROS Bridge: [/vrx/task/info (ignition.msgs.Param) -> /vrx/task/info (ros_gz_interfaces/msg/ParamVec)] (Lazy 0)
[parameter_bridge-4] [INFO] [1700494235.052004732] [ros_gz_bridge]: Creating GZ->ROS Bridge: [/vrx/debug/wind/speed (ignition.msgs.Float) -> /vrx/debug/wind/speed (std_msgs/msg/Float32)] (Lazy 0)
[parameter_bridge-4] [INFO] [1700494235.052553529] [ros_gz_bridge]: Creating GZ->ROS Bridge: [/vrx/debug/wind/direction (ignition.msgs.Float) -> /vrx/debug/wind/direction (std_msgs/msg/Float32)] (Lazy 0)
[ruby $(which gz) sim-1] Warning: Ignoring XDG_SESSION_TYPE=wayland on Gnome. Use QT_QPA_PLATFORM=wayland to run on Wayland anyway.
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [gz.cc:165] [0m[1;36mSubscribing to [[0m[1;36m/gazebo/starting_world[0m[1;36m].[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [gz.cc:167] [0m[1;36mWaiting for a world to be set from the GUI...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mReceived world [[0m[1;32msydney_regatta.sdf[0m[1;32m] from the GUI.[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [gz.cc:171] [0m[1;36mUnsubscribing from [[0m[1;36m/gazebo/starting_world[0m[1;36m].[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mGazebo Sim Server v[0m[1;32m7.6.0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mLoading SDF world file[[0m[1;32m/home/jonathan/vrx_ws/install/share/vrx_gz/worlds/sydney_regatta.sdf[0m[1;32m].[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing entity system service on [[0m[1;32m/[0m[1;32mentity/system/add[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Physics.cc:880] [0m[1;36mLoaded [[0m[1;36mgz::physics::dartsim::Plugin[0m[1;36m] from library [[0m[1;36m/usr/lib/x86_64-linux-gnu/gz-physics-6/engine-plugins/libgz-physics-dartsim-plugin.so[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::Physics[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mCreate service on [[0m[1;32m/world/sydney_regatta/create[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mRemove service on [[0m[1;32m/world/sydney_regatta/remove[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mPose service on [[0m[1;32m/world/sydney_regatta/set_pose[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mPose service on [[0m[1;32m/world/sydney_regatta/set_pose_vector[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mLight configuration service on [[0m[1;32m/world/sydney_regatta/light_config[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mPhysics service on [[0m[1;32m/world/sydney_regatta/set_physics[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mSphericalCoordinates service on [[0m[1;32m/world/sydney_regatta/set_spherical_coordinates[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mEnable collision service on [[0m[1;32m/world/sydney_regatta/enable_collision[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDisable collision service on [[0m[1;32m/world/sydney_regatta/disable_collision[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mMaterial service on [[0m[1;32m/world/sydney_regatta/visual_config[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mMaterial service on [[0m[1;32m/world/sydney_regatta/wheel_slip[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::UserCommands[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Sensors.cc:506] [0m[1;36mConfiguring Sensors system[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Sensors.cc:425] [0m[1;36mSensorsPrivate::Run[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::Sensors[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Sensors.cc:402] [0m[1;36mSensorsPrivate::RenderThread started[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Sensors.cc:245] [0m[1;36mWaiting for init[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::Imu[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::Magnetometer[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::ForceTorque[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing particle emitter information on [[0m[1;32m/world/sydney_regatta/particle_emitters[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::ParticleEmitter2[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::SceneBroadcaster[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::Contact[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::NavSat[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [USVWind.cc:160] [0m[1;36mwamv[0m[1;36m loaded[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mWind direction unit vector = [0m[1;32m-0.5[0m[1;32m [0m[1;32m-0.866025[0m[1;32m [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mWind mean velocity = [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mvar wind gain constants = [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mvar wind time constants = [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mupdate rate  = [0m[1;32m10[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtopic wind speed  = [0m[1;32m/vrx/debug/wind/speed[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtopic wind direction = [0m[1;32m/vrx/debug/wind/direction[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mRandom seed value = [0m[1;32m10[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mVar wind filter gain = [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::USVWind[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::PublisherPlugin[0m[1;36m] for entity [[0m[1;36m1[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::WaveVisual[0m[1;36m] for entity [[0m[1;36m17[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:236] [0m[1;36mFound buoyancy element(s), looking at each element...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:248] [0m[1;36mBuoyancy object:[0m
[ruby $(which gz) sim-1] [1;36m	Link: [0m[1;36mlink[0m[1;36m[[0m[1;36m19[0m[1;36m][0m
[ruby $(which gz) sim-1] [1;36m	Pose: [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m-0.3[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Geometry: [0m[1;36mCylinder:0.325,0.1[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Mass: [0m[1;36m20[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water height: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water velocity: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::PolyhedraBuoyancyDrag[0m[1;36m] for entity [[0m[1;36m18[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:236] [0m[1;36mFound buoyancy element(s), looking at each element...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:248] [0m[1;36mBuoyancy object:[0m
[ruby $(which gz) sim-1] [1;36m	Link: [0m[1;36mlink[0m[1;36m[[0m[1;36m24[0m[1;36m][0m
[ruby $(which gz) sim-1] [1;36m	Pose: [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m-0.3[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Geometry: [0m[1;36mCylinder:0.325,0.1[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Mass: [0m[1;36m20[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water height: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water velocity: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::PolyhedraBuoyancyDrag[0m[1;36m] for entity [[0m[1;36m23[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:236] [0m[1;36mFound buoyancy element(s), looking at each element...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:248] [0m[1;36mBuoyancy object:[0m
[ruby $(which gz) sim-1] [1;36m	Link: [0m[1;36mlink[0m[1;36m[[0m[1;36m29[0m[1;36m][0m
[ruby $(which gz) sim-1] [1;36m	Pose: [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m-0.3[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Geometry: [0m[1;36mCylinder:0.325,0.1[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Mass: [0m[1;36m20[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water height: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water velocity: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::PolyhedraBuoyancyDrag[0m[1;36m] for entity [[0m[1;36m28[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:236] [0m[1;36mFound buoyancy element(s), looking at each element...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:248] [0m[1;36mBuoyancy object:[0m
[ruby $(which gz) sim-1] [1;36m	Link: [0m[1;36mlink[0m[1;36m[[0m[1;36m34[0m[1;36m][0m
[ruby $(which gz) sim-1] [1;36m	Pose: [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m-0.3[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Geometry: [0m[1;36mCylinder:0.325,0.1[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Mass: [0m[1;36m20[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water height: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water velocity: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::PolyhedraBuoyancyDrag[0m[1;36m] for entity [[0m[1;36m33[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:236] [0m[1;36mFound buoyancy element(s), looking at each element...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:248] [0m[1;36mBuoyancy object:[0m
[ruby $(which gz) sim-1] [1;36m	Link: [0m[1;36mlink[0m[1;36m[[0m[1;36m39[0m[1;36m][0m
[ruby $(which gz) sim-1] [1;36m	Pose: [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Geometry: [0m[1;36mSphere:0.21[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Mass: [0m[1;36m3.5[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water height: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water velocity: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::PolyhedraBuoyancyDrag[0m[1;36m] for entity [[0m[1;36m38[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:236] [0m[1;36mFound buoyancy element(s), looking at each element...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:248] [0m[1;36mBuoyancy object:[0m
[ruby $(which gz) sim-1] [1;36m	Link: [0m[1;36mlink[0m[1;36m[[0m[1;36m43[0m[1;36m][0m
[ruby $(which gz) sim-1] [1;36m	Pose: [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Geometry: [0m[1;36mSphere:0.21[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Mass: [0m[1;36m3.5[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water height: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water velocity: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::PolyhedraBuoyancyDrag[0m[1;36m] for entity [[0m[1;36m42[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[create-3] [INFO] [1700494236.127251145] [ros_gz_sim]: Requested creation of entity.
[create-3] [INFO] [1700494236.127287171] [ros_gz_sim]: OK creation of entity.
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:52:3: QML RenderWindowOverlay: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:67:3: QML EntityContextMenu: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:52:3: QML RenderWindowOverlay: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:67:3: QML EntityContextMenu: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:52:3: QML RenderWindowOverlay: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:67:3: QML EntityContextMenu: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:52:3: QML RenderWindowOverlay: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:67:3: QML EntityContextMenu: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:52:3: QML RenderWindowOverlay: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:67:3: QML EntityContextMenu: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:52:3: QML RenderWindowOverlay: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:67:3: QML EntityContextMenu: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[INFO] [create-3]: process has finished cleanly [pid 42990]
[INFO] [parameter_bridge-5]: process started with pid [43085]
[INFO] [pose_tf_broadcaster-6]: process started with pid [43087]
[INFO] [robot_state_publisher-7]: process started with pid [43089]
[parameter_bridge-5] [INFO] [1700494236.284871844] [wamv.ros_gz_bridge]: Creating GZ->ROS Bridge: [/model/wamv/pose (ignition.msgs.Pose_V) -> /model/wamv/pose (tf2_msgs/msg/TFMessage)] (Lazy 0)
[parameter_bridge-5] [INFO] [1700494236.286536772] [wamv.ros_gz_bridge]: Creating GZ->ROS Bridge: [/model/wamv/pose_static (ignition.msgs.Pose_V) -> /model/wamv/pose_static (tf2_msgs/msg/TFMessage)] (Lazy 0)
[parameter_bridge-5] [INFO] [1700494236.287001380] [wamv.ros_gz_bridge]: Creating GZ->ROS Bridge: [/world/sydney_regatta/model/wamv/joint_state (ignition.msgs.Model) -> /world/sydney_regatta/model/wamv/joint_state (sensor_msgs/msg/JointState)] (Lazy 0)
[parameter_bridge-5] [INFO] [1700494236.287902249] [wamv.ros_gz_bridge]: Creating GZ->ROS Bridge: [/vrx/contacts (ignition.msgs.Contacts) -> /vrx/contacts (ros_gz_interfaces/msg/Contacts)] (Lazy 0)
[robot_state_publisher-7] [WARN] [1700494236.299608440] [kdl_parser]: The root link wamv/base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
[robot_state_publisher-7] [INFO] [1700494236.299662538] [wamv.robot_state_publisher]: got segment wamv/base_link
[robot_state_publisher-7] [INFO] [1700494236.299747733] [wamv.robot_state_publisher]: got segment wamv/cpu_cases_link
[robot_state_publisher-7] [INFO] [1700494236.299753872] [wamv.robot_state_publisher]: got segment wamv/left_battery_link
[robot_state_publisher-7] [INFO] [1700494236.299757580] [wamv.robot_state_publisher]: got segment wamv/right_battery_link
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32[1;32m[Msg] [0m[1;32mGazebo Sim GUI    v[0m[1;32m7.6.0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Gui.cc:261] [0m[1;36mWaiting for subscribers to [[0m[1;36m/gazebo/starting_world[0m[1;36m]...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Application.cc:96] [0m[1;36mInitializing application.[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Application.cc:128] [0m[1;36mQt using OpenGL graphics interface[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:607] [0m[1;36mCreate main window[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [PathManager.cc:67] [0m[1;36mRequesting resource paths through [[0m[1;36m/gazebo/resource_paths/get[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Gui.cc:341] [0m[1;36mGUI requesting list of world names. The server may be busy [0m[1;36mdownloading resources. Please be patient.[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [PathManager.cc:56] [0m[1;36mReceived resource paths.[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Gui.cc:399] [0m[1;36mRequesting GUI from [[0m[1;36m/world/sydney_regatta/gui/info[0m[1;36m]...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [GuiRunner.cc:149] [0m[1;36mRequesting initial state from [[0m[1;36m/world/sydney_regatta/state[0m[1;36m]...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mMinimalScene[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MinimalScene.cc:657] [0m[1;36mCreating gz-rendering interface for OpenGL[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MinimalScene.cc:657] [0m[1;36mCreating gz-rendering interface for OpenGL[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MinimalScene.cc:817] [0m[1;36mCreating render thread interface for OpenGL[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32m3D View[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mMinimalScene[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-gui-7/plugins/libMinimalScene.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mEntityContextMenuPlugin[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mEntity Context Menu[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mEntityContextMenuPlugin[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libEntityContextMenuPlugin.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mGzSceneManager[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mScene Manager[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mGzSceneManager[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libGzSceneManager.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mInteractiveViewControl[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mCamera view controller topic advertised on [[0m[1;32m/gui/camera/view_control[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mCamera reference visual topic advertised on [[0m[1;32m/gui/camera/view_control/reference_visual[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mCamera view control sensitivity advertised on [[0m[1;32m/gui/camera/view_control/sensitivity[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mInteractive view control[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mInteractiveViewControl[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-gui-7/plugins/libInteractiveViewControl.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mCameraTracking[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mCamera tracking[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] QQuickItem::setParentItem: Parent GzCard_QMLTYPE_246(0x5616f131b4d0, name="plugin25467", parent=0x5616ef974100, geometry=0,0 350x90) is already part of the subtree of GzCard_QMLTYPE_246(0x5616f131b4d0, name="plugin25467", parent=0x5616ef974100, geometry=0,0 350x90)[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:26:1: QML GzCard: Cannot anchor item to self.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:26:1: QML GzCard: Cannot anchor item to self.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mCameraTracking[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-gui-7/plugins/libCameraTracking.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mMarkerManager[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mListening to stats on [[0m[1;32m/world/sydney_regatta/stats[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mMarker Manager[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mMarkerManager[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-gui-7/plugins/libMarkerManager.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mSelectEntities[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mSelect entities[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mSelectEntities[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libSelectEntities.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mVisualizationCapabilities[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mView as transparent service on [[0m[1;32m/gui/view/transparent[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mView as wireframes service on [[0m[1;32m/gui/view/wireframes[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mView center of mass service on [[0m[1;32m/gui/view/com[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mView inertia service on [[0m[1;32m/gui/view/inertia[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mView collisions service on [[0m[1;32m/gui/view/collisions[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mView joints service on [[0m[1;32m/gui/view/joints[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mView frames service on [[0m[1;32m/gui/view/frames[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mVisualization capabilities[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mVisualizationCapabilities[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libVisualizationCapabilities.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mSpawn[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mSpawn[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mSpawn[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libSpawn.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mWorldControl[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mUsing world control service [[0m[1;32m/world/sydney_regatta/control[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mListening to stats on [[0m[1;32m/world/sydney_regatta/stats[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [WorldControl.cc:250] [0m[1;36mUsing an event to share WorldControl msgs with the server[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mWorld control[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mWorldControl[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-gui-7/plugins/libWorldControl.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mWorldStats[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mListening to stats on [[0m[1;32m/world/sydney_regatta/stats[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityTree/EntityTree.qml:148:7: QML ToolButton: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/ViewAngle/ViewAngle.qml:251:5: Unable to assign int to QColor[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/ViewAngle/ViewAngle.qml:279:5: Unable to assign int to QColor[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/ViewAngle/ViewAngle.qml:333:5: Unable to assign int to QColor[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityTree/EntityTree.qml:148:7: QML ToolButton: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/WorldStats/WorldStats.qml:53:3: QML RowLayout: Binding loop detected for property "x"[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:52:3: QML RenderWindowOverlay: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::/EntityContextMenuPlugin/EntityContextMenuPlugin.qml:67:3: QML EntityContextMenu: Detected anchors on an item that is managed by a layout. This is undefined behavior; use Layout.alignment instead.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mWorld stats[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mWorldStats[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-gui-7/plugins/libWorldStats.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mShapes[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mShapes[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mShapes[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libShapes.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mLights[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mLights[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mLights[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libLights.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mTransformControl[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mTransform control[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mTransformControl[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libTransformControl.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mScreenshot[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mScreenshot service on [[0m[1;32m/gui/screenshot[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mScreenshot[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mScreenshot[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-gui-7/plugins/libScreenshot.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mVideoRecorder[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mVideo recorder[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mVideoRecorder[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libVideoRecorder.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mComponentInspector[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mComponent inspector[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mComponentInspector[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libComponentInspector.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mEntityTree[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mEntity tree[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mEntityTree[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libEntityTree.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:459] [0m[1;36mLoading plugin [[0m[1;36mViewAngle[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mMove to model service on [[0m[1;32m/gui/move_to/model[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mAdded plugin [[0m[1;32mView Angle[0m[1;32m] to main window[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoaded plugin [[0m[1;32mViewAngle[0m[1;32m] from path [[0m[1;32m/usr/lib/x86_64-linux-gnu/gz-sim-7/plugins/gui/libViewAngle.so[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MinimalScene.cc:657] [0m[1;36mCreating gz-rendering interface for OpenGL[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MinimalScene.cc:817] [0m[1;36mCreating render thread interface for OpenGL[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MinimalScene.cc:606] [0m[1;36mCreate scene [[0m[1;36mscene[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MinimalScene.cc:849] [0m[1;36mCreating texture node render interface for OpenGL[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [ViewAngle.cc:467] [0m[1;36mViewAngle plugin is moving camera [[0m[1;36mscene::Camera(65527)[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [VideoRecorder.cc:136] [0m[1;36mVideo Recorder plugin is recoding camera [[0m[1;36mscene::Camera(65527)[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mVideo recorder stats topic advertised on [[0m[1;32m/gui/record_video/stats[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [TransformControl.cc:453] [0m[1;36mTransformControl plugin is using camera [[0m[1;36mscene::Camera(65527)[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Spawn.cc:308] [0m[1;36mSpawn plugin is using camera [[0m[1;36mscene::Camera(65527)[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [SelectEntities.cc:452] [0m[1;36mSelectEntities plugin is using camera [[0m[1;36mscene::Camera(65527)[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MarkerManager.cc:171] [0m[1;36mAdvertise [0m[1;36m/marker[0m[1;36m/list service.[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MarkerManager.cc:181] [0m[1;36mAdvertise [0m[1;36m/marker[0m[1;36m/list.[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MarkerManager.cc:191] [0m[1;36mAdvertise [0m[1;36m/marker[0m[1;36m_array.[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [CameraTracking.cc:171] [0m[1;36mCameraTrackingPrivate plugin is moving camera [[0m[1;36mscene::Camera(65527)[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mMove to service on [[0m[1;32m/gui/move_to[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mFollow service on [[0m[1;32m/gui/follow[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mMove to pose service on [[0m[1;32m/gui/move_to/pose[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mCamera pose topic advertised on [[0m[1;32m/gui/camera/pose[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mFollow offset service on [[0m[1;32m/gui/follow/offset[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [InteractiveViewControl.cc:178] [0m[1;36mInteractiveViewControl plugin is moving camera [[0m[1;36mscene::Camera(65527)[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [EntityContextMenuPlugin.cc:79] [0m[1;36mEntity context menu plugin is using camera [[0m[1;36mscene::Camera(65527)[0m[1;36m][0m[1;36mm[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:236] [0m[1;36mFound buoyancy element(s), looking at each element...[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [PolyhedraBuoyancyDrag.cc:248] [0m[1;36mBuoyancy object:[0m
[ruby $(which gz) sim-1] [1;36m	Link: [0m[1;36mlink[0m[1;36m[[0m[1;36m138[0m[1;36m][0m
[ruby $(which gz) sim-1] [1;36m	Pose: [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m-0.02[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Geometry: [0m[1;36mSphere:0.0285[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Mass: [0m[1;36m0.04[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water height: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m	Water velocity: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::PolyhedraBuoyancyDrag[0m[1;36m] for entity [[0m[1;36m137[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mLoaded level [[0m[1;32m3[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing world controls on [[0m[1;32m/world/sydney_regatta[0m[1;32m/control], [[0m[1;32m/world/sydney_regatta[0m[1;32m/control/state] and [[0m[1;32m/world/sydney_regatta[0m[1;32m/playback/control][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing GUI information on [[0m[1;32m/world/sydney_regatta[0m[1;32m/[0m[1;32mgui/info[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mWorld [[0m[1;32msydney_regatta[0m[1;32m] initialized with [[0m[1;32m4ms[0m[1;32m] physics profile.[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing world SDF generation service on [[0m[1;32m/world/sydney_regatta[0m[1;32m/[0m[1;32mgenerate_world_sdf[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing world names on [[0m[1;32m/gazebo/worlds[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mResource path add service on [[0m[1;32m/gazebo/resource_paths/add[0m[1;32m].[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mResource path get service on [[0m[1;32m/gazebo/resource_paths/get[0m[1;32m].[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mResource path resolve service on [[0m[1;32m/gazebo/resource_paths/resolve[0m[1;32m].[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mResource paths published on [[0m[1;32m/gazebo/resource_paths[0m[1;32m].[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServer control service on [[0m[1;32m/server_control[0m[1;32m].[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mFound no publishers on /stats, adding root stats topic[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mFound no publishers on /clock, adding root clock topic[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:503] [0m[1;36mCreating PostUpdate worker threads: [0m[1;36m8[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m0[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m1[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m2[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m3[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m4[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m5[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m6[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:187] [0m[1;36mSurface plugin successfully configured with the following [0m[1;36mparameters:[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:189] [0m[1;36m  <link_name>: [0m[1;36mwamv/base_link[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:190] [0m[1;36m  <vehicle_length>: [0m[1;36m4.9[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:191] [0m[1;36m  <hull_radius>: [0m[1;36m0.213[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:192] [0m[1;36m  <fluid_level>: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:193] [0m[1;36m  <fluid_density>: [0m[1;36m997.774[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:194] [0m[1;36m  <points>:[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:196] [0m[1;36m    [[0m[1;36m0.6[0m[1;36m [0m[1;36m1.03[0m[1;36m [0m[1;36m0[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:196] [0m[1;36m    [[0m[1;36m-1.4[0m[1;36m [0m[1;36m1.03[0m[1;36m [0m[1;36m0[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::Surface[0m[1;36m] for entity [[0m[1;36m143[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:187] [0m[1;36mSurface plugin successfully configured with the following [0m[1;36mparameters:[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:189] [0m[1;36m  <link_name>: [0m[1;36mwamv/base_link[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:190] [0m[1;36m  <vehicle_length>: [0m[1;36m4.9[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:191] [0m[1;36m  <hull_radius>: [0m[1;36m0.213[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:192] [0m[1;36m  <fluid_level>: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:193] [0m[1;36m  <fluid_density>: [0m[1;36m997.774[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:194] [0m[1;36m  <points>:[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:196] [0m[1;36m    [[0m[1;36m0.6[0m[1;36m [0m[1;36m-1.03[0m[1;36m [0m[1;36m0[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Surface.cc:196] [0m[1;36m    [[0m[1;36m-1.4[0m[1;36m [0m[1;36m-1.03[0m[1;36m [0m[1;36m0[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::Surface[0m[1;36m] for entity [[0m[1;36m143[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:164] [0m[1;36mSimpleHydrodynamics plugin successfully configured with the [0m[1;36mfollowing parameters:[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:166] [0m[1;36m  <link_name>: [0m[1;36mwamv/base_link[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:167] [0m[1;36m  <xDotU>: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:168] [0m[1;36m  <yDotV>: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:169] [0m[1;36m  <zDotW>: [0m[1;36m0.1[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:170] [0m[1;36m  <kDotP>: [0m[1;36m0.1[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:171] [0m[1;36m  <mDotQ>: [0m[1;36m0.1[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:172] [0m[1;36m  <nDotR>: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:173] [0m[1;36m  <xU>: [0m[1;36m100[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:174] [0m[1;36m  <xUU>: [0m[1;36m150[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;31m[Err] [SDFFeatures.cc:843] [0m[1;31mThe geometry element of collision [[0m[1;31mcollision[0m[1;31m] [0m[1;31mcouldn't be created[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:175] [0m[1;36m  <yV>: [0m[1;36m100[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:176] [0m[1;36m  <yVV>: [0m[1;36m100[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:177] [0m[1;36m  <zW>: [0m[1;36m500[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:178] [0m[1;36m  <zWW>: [0m[1;36m0[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:179] [0m[1;36m  <kP>: [0m[1;36m300[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:180] [0m[1;36m  <kPP>: [0m[1;36m600[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:181] [0m[1;36m  <mQ>: [0m[1;36m900[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:182] [0m[1;36m  <mQQ>: [0m[1;36m900[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:183] [0m[1;36m  <nR>: [0m[1;36m800[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimpleHydrodynamics.cc:184] [0m[1;36m  <nRR>: [0m[1;36m800[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mvrx::SimpleHydrodynamics[0m[1;36m] for entity [[0m[1;36m143[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [DetachableJoint.cc:137] [0m[1;36mDetach topic is: [0m[1;36m/vrx/release[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [DetachableJoint.cc:143] [0m[1;36mDetachableJoint subscribing to messages on [0m[1;36m[[0m[1;36m/vrx/release[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [DetachableJoint.cc:160] [0m[1;36mAttach topic is: [0m[1;36m/model/wamv/detachable_joint/attach[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [DetachableJoint.cc:195] [0m[1;36mOutput topic is: [0m[1;36m/model/platform/detachable_joint/state[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::DetachableJoint[0m[1;36m] for entity [[0m[1;36m143[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::PosePublisher[0m[1;36m] for entity [[0m[1;36m143[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SystemManager.cc:74] [0m[1;36mLoaded system [[0m[1;36mgz::sim::systems::JointStatePublisher[0m[1;36m] for entity [[0m[1;36m143[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [UserCommands.cc:1263] [0m[1;36mCreated entity [[0m[1;36m143[0m[1;36m] named [[0m[1;36mwamv[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mContact system publishing on [0m[1;32m/vrx/contacts[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [USVWind.cc:282] [0m[1;36mwamv[0m[1;36m initialized[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SDFFeatures.cc:328] [0m[1;36mMesh construction from an SDF has not been implemented yet for [0m[1;36mdartsim. Use AttachMeshShapeFeature to use mesh shapes.[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationFeatures.cc:72] [0m[1;36mSimulation timestep set to: [0m[1;36m0.004[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing scene information on [[0m[1;32m/world/sydney_regatta[0m[1;32m/[0m[1;32mscene/info[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing graph information on [[0m[1;32m/world/sydney_regatta[0m[1;32m/[0m[1;32mscene/graph[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing full state on [[0m[1;32m/world/sydney_regatta[0m[1;32m/[0m[1;32mstate[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mServing full state (async) on [[0m[1;32m/world/sydney_regatta[0m[1;32m/[0m[1;32mstate_async[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mPublishing scene information on [[0m[1;32m/world/sydney_regatta/scene/info[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mPublishing entity deletions on [[0m[1;32m/world/sydney_regatta/scene/deletion[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mPublishing state changes on [[0m[1;32m/world/sydney_regatta/state[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mPublishing pose messages on [[0m[1;32m/world/sydney_regatta[0m[1;32m/[0m[1;32mpose/info[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[Msg] [0m[1;32mPublishing dynamic pose messages on [[0m[1;32m/world/sydney_regatta[0m[1;32m/[0m[1;32mdynamic_pose/info[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [Component.hh:127] [0m[1;33mTrying to serialize component with data type [[0m[1;33mSt10shared_ptrIN3sdf3v137ElementEE[0m[1;33m], which doesn't have [0m[1;33m`operator<<`. Component will not be serialized.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [Model.hh:69] [0m[1;33mSkipping serialization / deserialization for models [0m[1;33mwith //pose/@relative_to attribute.[0m[1;33m[Wrn] [Model.hh:69] [0m[1;33mSkipping serialization / deserialization for models [0m[1;33mwith //pose/@relative_to attribute.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [Component.hh:144] [0m[1;33mTrying to serialize component with data type [[0m[1;33mN3sdf3v135WorldE[0m[1;33m], which doesn't have [0m[1;33m`operator<<`. Component will not be serialized.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [Model.hh:69] [0m
[ruby $(which gz) sim-1] [1;33m[Wrn] [Model.hh:69] [0m[1;33mSkipping serialization / deserialization for models [0m[1;33mwith //pose/@relative_to attribute.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Component.hh:189] [0m[1;33mTrying to deserialize component with data type [[0m[1;33mN3sdf3v135WorldE[0m[1;33m], which doesn't have [0m[1;33m`operator>>`. Component will not be deserialized.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [EntityComponentManager.cc:1655] [0m[1;36mUpdated state thread iterators: [0m[1;36m8[0m[1;36m threads processing ar[0m
[ruby $(which gz) sim-1] [1;33mWarning [Utils.cc:130][0m [/sdf/plugin[@name="vrx::WaveVisual"]:<data-string>:L1]: XML Element[plugin], child of element[sdf], not defined in SDF. Copying[plugin] as children of [sdf].
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Component.hh:172] [0m[1;33mTrying to deserialize component with data type [[0m[1;33mSt10shared_ptrIN3sdf3v137ElementEE[0m[1;33m], which doesn't have [0m[1;33m`operator>>`. Component will not be deserialized.[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [GuiRunner.cc:372] [0m[1;36mLoaded system [[0m[1;36mvrx::WaveVisual[0m[1;36m] for entity [[0m[1;36m17[0m[1;36m] in GUI[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [GuiRunner.cc:372] [0m[1;36mLoaded system [[0m[1;36mvrx::WaveVisual[0m[1;36m] for entity [[0m[1;36m17[0m[1;36m] in GUI[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [GuiRunner.cc:372] [0m[1;36mLoaded system [[0m[1;36mvrx::WaveVisual[0m[1;36m] for entity [[0m[1;36m17[0m[1;36m] in GUI[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mInput Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mmodel:     [0m[1;32mPMS[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mnumber:     [0m[1;32m3[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mscale:      [0m[1;32m1.1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mangle:      [0m[1;32m0.4[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32msteepness:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mamplitude:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mperiod:     [0m[1;32m5[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mdirection:  [0m[1;32m0[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mtau:  [0m[1;32m2[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mgain:  [0m[1;32m1[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mDerived Parameters:[0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mamplitudes:  [0m[1;32m0.121167[0m[1;32m, [0m[1;32m0.130759[0m[1;32m, [0m[1;32m0.128568[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mwavenumbers: [0m[1;32m0.133171[0m[1;32m, [0m[1;32m0.161136[0m[1;32m, [0m[1;32m0.194975[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32momegas:      [0m[1;32m1.1424[0m[1;32m, [0m[1;32m1.25664[0m[1;32m, [0m[1;32m1.3823[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mperiods:     [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m5.5[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m5[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m4.54545[0m[1;32m, [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mphases:      [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32msteepnesses: [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m0[0m[1;32m, [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mdirections:  [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m-0.389418[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m1[0m[1;32m [0m[1;32m0[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m0.921061[0m[1;32m [0m[1;32m0.389418[0m[1;32m; [0m[1;32m[GUI] [0m[1;32m[Msg] [0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [GuiRunner.cc:372] [0m[1;36mLoaded system [[0m[1;36mvrx::WaveVisual[0m[1;36m] for entity [[0m[1;36m17[0m[1;36m] in GUI[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;33mWarning [Utils.cc:130][0m [/sdf/plugin[@name="vrx::WaveVisual"]:<data-string>:L1]: XML Element[plugin], child of element[sdf], not defined in SDF. Copying[plugin] as children of [sdf].
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Model.hh:98] [0m[1;33mUnable to deserialize sdf::Model[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [LocalCache.cc:105] [0m[1;33mServer directory does not exist [[0m[1;33m/home/jonathan/.gz/fuel/fuel.ignitionrobotics.org[0m[1;33m][0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:52: TypeError: Cannot read property 'dialogOnExitText' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:54: TypeError: Cannot read property 'exitDialogShowCloseGui' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:53: TypeError: Cannot read property 'exitDialogShowShutdown' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:251: TypeError: Cannot read property 'showDrawer' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:/qml/SideDrawer.qml:93: TypeError: Cannot read property 'showDefaultDrawerOpts' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:/qml/GzSplit.qml:56: TypeError: Cannot read property 'pluginCount' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:41: TypeError: Cannot read property 'toolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:42: TypeError: Cannot read property 'toolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:43: TypeError: Cannot read property 'toolBarColorDark' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:44: TypeError: Cannot read property 'toolBarTextColorDark' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:45: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:46: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:47: TypeError: Cannot read property 'pluginToolBarColorDark' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:48: TypeError: Cannot read property 'pluginToolBarTextColorDark' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:50: TypeError: Cannot read property 'defaultExitAction' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:51: TypeError: Cannot read property 'showDialogOnExit' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:55: TypeError: Cannot read property 'exitDialogShutdownText' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:56: TypeError: Cannot read property 'exitDialogCloseGuiText' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:66: TypeError: Cannot read property 'toolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:76: TypeError: Cannot read property 'toolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:219: TypeError: Cannot read property 'showPluginMenu' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:202: TypeError: Cannot read property 'showDrawer' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] qrc:qml/Main.qml:188: TypeError: Cannot read property 'showDrawer' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:128: TypeError: Cannot read property 'pluginToolBarColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;33m[GUI] [Wrn] [Application.cc:859] [0m[1;33m[QT] file::qml/GzCard.qml:139: TypeError: Cannot read property 'pluginToolBarTextColorLight' of null[0m[1;33m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Gui.cc:521] [0m[1;36mShutting down gz-sim-gui[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [Application.cc:173] [0m[1;36mTerminating application.[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;32m[GUI] [0m[1;32m[Msg] [0m[1;32mLoading plugin [[0m[1;32mgz-rendering-ogre2[0m[1;32m][0m[1;32m[0m
[ruby $(which gz) sim-1] [1;36m[GUI] [Dbg] [MinimalScene.cc:685] [0m[1;36mDestroy scene [[0m[1;36mscene[0m[1;36m][0m[1;36m[0m
[ruby $(which gz) sim-1] ound [0m[1;36m23[0m[1;36m entities each.[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m4[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36mExiting postupdate worker thread ([0m[1;36m1[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m3[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m2[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m5[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36mExiting postupdate worker thread ([Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m6[0m[1;36m)[0m[1;36mExiting postupdate worker thread ([0m[1;36m0[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:503] [0m[1;36mCreating PostUpdate worker threads: [0m[1;36m10[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m0[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m1[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m2[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m3[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m4[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m5[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m6[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m7[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:514] [0m[1;36mCreating postupdate worker thread ([0m[1;36m8[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SignalHandler.cc:142] [0m[1;36mReceived signal[[0m[1;36m2[0m[1;36m].[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [ServerPrivate.cc:115] [0m[1;36mServer received signal[[0m[1;36m2[0m[1;36m][0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Sensors.cc:433] [0m[1;36mSensorsPrivate::Stop[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Sensors.cc:277] [0m[1;36mRendering Thread initialized[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Sensors.cc:419] [0m[1;36mSensorsPrivate::RenderThread stopped[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [gz.cc:417] [0m[1;36mShutting down gz-sim-server[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m6[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m3[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m4[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m8[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m0[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36mExiting postupdate worker thread ([0m[1;36m7[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m1[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m2[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [SimulationRunner.cc:530] [0m[1;36mExiting postupdate worker thread ([0m[1;36m5[0m[1;36m)[0m[1;36m[0m
[ruby $(which gz) sim-1] [1;36m[Dbg] [Sensors.cc:433] [0m[1;36mSensorsPrivate::Stop[0m[1;36m[0m
[INFO] [ruby $(which gz) sim-1]: process has finished cleanly [pid 42985]
[INFO] [monitor_sim-2]: process has finished cleanly [pid 42988]
[INFO] [robot_state_publisher-7]: sending signal 'SIGINT' to process[robot_state_publisher-7]
[INFO] [pose_tf_broadcaster-6]: sending signal 'SIGINT' to process[pose_tf_broadcaster-6]
[INFO] [parameter_bridge-5]: sending signal 'SIGINT' to process[parameter_bridge-5]
[INFO] [parameter_bridge-4]: sending signal 'SIGINT' to process[parameter_bridge-4]
[robot_state_publisher-7] [INFO] [1700494255.131246402] [rclcpp]: signal_handler(signum=2)
[pose_tf_broadcaster-6] [INFO] [1700494255.132104825] [rclcpp]: signal_handler(signum=2)
[parameter_bridge-5] [INFO] [1700494255.132588364] [rclcpp]: signal_handler(signum=2)
[parameter_bridge-4] [INFO] [1700494255.133088615] [rclcpp]: signal_handler(signum=2)
[INFO] [robot_state_publisher-7]: process has finished cleanly [pid 43089]
[INFO] [pose_tf_broadcaster-6]: process has finished cleanly [pid 43087]
[ERROR] [parameter_bridge-5]: process[parameter_bridge-5] failed to terminate '5' seconds after receiving 'SIGINT', escalating to 'SIGTERM'
[ERROR] [parameter_bridge-4]: process[parameter_bridge-4] failed to terminate '5' seconds after receiving 'SIGINT', escalating to 'SIGTERM'
[INFO] [parameter_bridge-5]: sending signal 'SIGTERM' to process[parameter_bridge-5]
[INFO] [parameter_bridge-4]: sending signal 'SIGTERM' to process[parameter_bridge-4]
[INFO] [parameter_bridge-5]: process has finished cleanly [pid 43085]
[INFO] [parameter_bridge-4]: process has finished cleanly [pid 42993]
